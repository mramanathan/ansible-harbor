---
  - ec2_metadata_facts:

  - name: Set the public IPv4 address
    set_fact:
      ipv4_address:  "{{ ansible_ec2_public_ipv4 }}"
    when: ipv4_address is undefined

  - name: Check and set home for harobr installation
    set_fact:
      harbor_home="/opt/harbor"
    when: harbor_home is undefined

  - name: Check and set Harbor port
    set_fact:
      harbor_port="1729"
    when: harbor_port is undefined

  - name: Check for version of harobr to install
    set_fact:
      harbor_version="1.9.0"
    when: harbor_version is undefined

  - name: Create harbor folder
    file:
      path: "{{ harbor_home }}"
      state: directory
      mode: '0755'
  
  - name: Download harbor
    unarchive:
      src: https://storage.googleapis.com/harbor-releases/release-{{ harbor_version}}/harbor-online-installer-v{{ harbor_version}}.tgz
      dest: "{{ harbor_home }}"
      remote_src: yes

  - name: Update ipv4 address to access the harbor
    lineinfile:
      path: "{{ harbor_home }}/harbor/harbor.yml"
      regexp: '^hostname: (.*)$'
      line: "hostname: {{ ipv4_address }}"

  - name: Update http port
    lineinfile:
      path: "{{ harbor_home }}/harbor/harbor.yml"
      regexp: '^  port: (.*)$'
      line: "  port: {{ harbor_port }}"

  - name: Run the prepare script
    command: "./prepare --with-chartmuseum"
    args: 
      chdir: "{{ harbor_home }}/harbor"

  - name: Start Harbor
    command: "docker-compose up -d"
    args: 
      chdir: "{{ harbor_home }}/harbor"

  - name: Check Harbor installation status
    command: "docker-compose ps"
    args: 
      chdir: "{{ harbor_home }}/harbor"
    register: compose_ps

  - name: List of active Harbor containers
    debug: msg="{{ compose_ps.stdout }}"

  - name: Emit Harbor URL
    command: echo "Harbor can be accessed at, http://{{ ipv4_address }}:{{ harbor_port }}" 
    register: harbor_url 

  - name: Harbor URL info
    debug: msg="{{ harbor_url.stdout }}"